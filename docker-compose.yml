version: '3.2'

services:
  webapp:
    build: ./docker/webapp
    container_name: daigou_webapp
    restart: always
    command: ["uwsgi", "--ini", "/code/uwsgi.ini"]
    networks:
      - backend
    depends_on:
      - db
      - cache
      - mqtt
    environment:
      FLASK_APP: WebServer.py
      FLASK_SECRET_KEY: daigou!1234
      DB_HOST: db
      DB_USER: daigou
      DB_PASSWORD: daigou123
      DB_NAME: daigou
    volumes:
      - ./docker/webapp/src/uwsgi.ini:/code/uwsgi.ini
      - ./docker/webapp/log:/var/log
      - ./docker/webapp/src:/code

  db:
    build: ./docker/mysql
    container_name: daigou_mysql
    restart: always
    networks:
      - backend
    command: ["mysqld", "--character-set-server", "utf8", "--collation-server", "utf8_unicode_ci"]
    environment:
      MYSQL_DATABASE: daigou
      MYSQL_USER: daigou
      MYSQL_PASSWORD: daigou123
      MYSQL_RANDOM_ROOT_PASSWORD: daigou1234
    volumes:
      - ./docker/mysql/conf.d/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf
      - ./docker/mysql/dbfile:/var/lib/mysql
      - ./docker/mysql/backup:/home/backup

  cache:
    image: redis:5.0
    container_name: daigou_cache
    restart: always
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "ocrmeter123"]
    ports:
      - 127.0.0.1:6379:6379
    networks:
      - backend
    volumes:
      - ./docker/redis/data:/data

  mqtt:
    image: rabbitmq:3.7
    container_name: daigou_mqtt
    restart: always
    ports:
      - 127.0.0.1:5672:5672
      - 127.0.0.1:15672:15672
    networks:
      - backend
    environment:
      RABBITMQ_DEFAULT_USER: daigou
      RABBITMQ_DEFAULT_PASS: daigou123

  nginx:
    image: nginx
    container_name: daigou_nginx
    restart: always
    ports:
      - 8002:80
    networks:
      - proxy
      - backend
    volumes:
      - ./docker/nginx/conf.d/webapp.conf:/etc/nginx/conf.d/app.conf
      - ./docker/nginx/html:/usr/share/nginx/html
    depends_on:
      - webapp

networks:
    proxy:
        external: true
    backend:
